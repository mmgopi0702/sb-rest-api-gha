name: Manual Maven Build and Deploy

# Trigger the workflow manually
on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Select the environment to deploy to'
        required: true
        default: 'dev'
        type: choice
        options:
          - dev
          - test
          - prod
      build_with_tests:
        description: 'Do you want to run tests during the build?'
        required: true
        default: 'no'
        type: choice
        options:
          - yes
          - no

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Check out the code
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 2: Set up JDK (Java Development Kit)
      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      # Step 3: Cache Maven dependencies for faster builds
      - name: Cache Maven dependencies
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      # Step 4: Build with Maven (with or without tests based on input)
      - name: Build with Maven
        run: |
          if [ "${{ github.event.inputs.build_with_tests }}" == "yes" ]; then
            mvn clean install
          else
            mvn clean install -DskipTests
          fi

  deploy:
    runs-on: ubuntu-latest
    needs: build

    steps:
      # Step 1: Deployment step based on the selected environment
      - name: Deploy to Environment
        run: |
          if [ "${{ github.event.inputs.environment }}" == "dev" ]; then
            echo "Deploying to Development Environment"
            # Add your development deployment script here
          elif [ "${{ github.event.inputs.environment }}" == "test" ]; then
            echo "Deploying to Test Environment"
            # Add your test deployment script here
          elif [ "${{ github.event.inputs.environment }}" == "prod" ]; then
            echo "Deploying to Production Environment"
            # Add your production deployment script here
          fi
